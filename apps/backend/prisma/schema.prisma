// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Driver {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  driverId    String   @unique
  givenName   String
  familyName  String
  dateOfBirth DateTime
  nationality String
  url         String

  // Relations
  seasonChampions SeasonChampion[]
  raceWinners     RaceWinner[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("drivers")
}

model Constructor {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  constructorId String @unique
  name          String
  nationality   String
  url           String

  // Relations
  seasonChampions SeasonChampion[]
  raceWinners     RaceWinner[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("constructors")
}

model Circuit {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  circuitId   String @unique
  circuitName String
  url         String

  // Location embedded document
  location CircuitLocation

  // Relations
  raceWinners RaceWinner[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("circuits")
}

type CircuitLocation {
  lat      String
  long     String
  locality String
  country  String
}

model SeasonChampion {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  season       String
  position     String
  positionText String
  points       String
  wins         String
  round        String

  // Relations
  driverId String @db.ObjectId
  driver   Driver @relation(fields: [driverId], references: [id])

  constructorId String      @db.ObjectId
  constructor   Constructor @relation(fields: [constructorId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([season, driverId])
  @@map("season_champions")
}

model RaceWinner {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  season   String
  round    String
  raceName String
  date     DateTime
  time     String
  url      String

  // Winner details embedded
  winnerDetails WinnerDetails

  // Relations
  circuitId String  @db.ObjectId
  circuit   Circuit @relation(fields: [circuitId], references: [id])

  driverId String @db.ObjectId
  driver   Driver @relation(fields: [driverId], references: [id])

  constructorId String      @db.ObjectId
  constructor   Constructor @relation(fields: [constructorId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([season, round])
  @@map("race_winners")
}

type WinnerDetails {
  number   String
  position String
  points   String
  laps     String
  time     RaceTime
}

type RaceTime {
  millis String
  time   String
}

model Season {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  year String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("seasons")
}
