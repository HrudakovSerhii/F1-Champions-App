openapi: 3.0.3
info:
  title: F1 Champions API
  description: API for retrieving Formula 1 championship data including season winners and race results
  version: 1.0.0
  contact:
    name: F1 Champions App
servers:
  - url: /api
    description: Main API server

paths:
  /seasons:
    get:
      summary: Get seasons with winners
      description: Retrieve all F1 seasons with their respective championship winners
      operationId: getSeasonsWithWinners
      tags:
        - Seasons
      responses:
        '200':
          description: Successfully retrieved seasons with winners
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeasonsApiResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /seasons/{season}/race-winners:
    get:
      summary: Get season race winners
      description: Retrieve all race winners for a specific F1 season
      operationId: getSeasonRaceWinners
      tags:
        - Seasons
      parameters:
        - name: season
          in: path
          required: true
          description: The F1 season year (e.g., 2023)
          schema:
            type: string
            pattern: '^[0-9]{4}$'
            example: "2023"
      responses:
        '200':
          description: Successfully retrieved race winners for the specified season
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeasonRaceWinnersApiResponse'
        '404':
          description: Season not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /health:
    get:
      summary: Get API health status
      description: Check the health status of the backend API server
      operationId: getHealth
      tags:
        - Health
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        '503':
          description: API is unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

components:
  schemas:
    SeasonWinner:
      type: object
      required:
        - season
        - winner
      properties:
        season:
          type: string
          description: The F1 season year
          example: "2023"
        winner:
          $ref: '#/components/schemas/Driver'

    SeasonRaceWinner:
      type: object
      required:
        - url
        - date
        - season
        - round
        - raceName
        - circuit
        - winner
      properties:
        url:
          type: string
          format: uri
          description: URL to the race information
        date:
          type: string
          format: date
          description: Race date
          example: "2023-03-05"
        season:
          type: string
          description: The F1 season year
          example: "2023"
        round:
          type: integer
          description: Round number in the season
          example: 1
        raceName:
          type: string
          description: Name of the race
          example: "Bahrain Grand Prix"
        circuit:
          $ref: '#/components/schemas/Circuit'
        winner:
          $ref: '#/components/schemas/RaceWinner'

    Driver:
      type: object
      required:
        - wins
        - familyName
        - givenName
        - url
        - nationality
        - driverId
        - constructor
      properties:
        wins:
          type: integer
          description: Number of wins in the season
          example: 15
        familyName:
          type: string
          description: Driver's family name
          example: "Verstappen"
        givenName:
          type: string
          description: Driver's given name
          example: "Max"
        url:
          type: string
          format: uri
          description: URL to driver information
        nationality:
          type: string
          description: Driver's nationality
          example: "Dutch"
        driverId:
          type: string
          description: Unique driver identifier
          example: "max_verstappen"
        constructor:
          $ref: '#/components/schemas/Constructor'

    RaceWinner:
      type: object
      required:
        - nationality
        - familyName
        - givenName
        - url
        - driverId
        - time
        - laps
        - constructor
      properties:
        nationality:
          type: string
          description: Driver's nationality
          example: "Dutch"
        familyName:
          type: string
          description: Driver's family name
          example: "Verstappen"
        givenName:
          type: string
          description: Driver's given name
          example: "Max"
        url:
          type: string
          format: uri
          description: URL to driver information
        driverId:
          type: string
          description: Unique driver identifier
          example: "max_verstappen"
        time:
          type: string
          description: Race completion time
          example: "1:31:12.258"
        laps:
          type: integer
          description: Number of laps completed
          example: 57
        constructor:
          $ref: '#/components/schemas/Constructor'

    Constructor:
      type: object
      required:
        - name
        - url
        - nationality
      properties:
        name:
          type: string
          description: Constructor team name
          example: "Red Bull"
        url:
          type: string
          format: uri
          description: URL to constructor information
        nationality:
          type: string
          description: Constructor's nationality
          example: "Austrian"

    Circuit:
      type: object
      required:
        - name
        - country
        - locality
      properties:
        name:
          type: string
          description: Circuit name
          example: "Bahrain International Circuit"
        country:
          type: string
          description: Country where the circuit is located
          example: "Bahrain"
        locality:
          type: string
          description: City or locality of the circuit
          example: "Sakhir"

    Meta:
      type: object
      required:
        - total
        - cached
        - lastUpdated
      properties:
        total:
          type: integer
          description: Total number of records
          example: 20
        cached:
          type: boolean
          description: Whether the response was served from cache
          example: true
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp of when the data was last updated
          example: "2023-12-01T10:30:00Z"

    SeasonMeta:
      allOf:
        - $ref: '#/components/schemas/Meta'
        - type: object
          required:
            - season
          properties:
            season:
              type: string
              description: The F1 season year
              example: "2023"

    SeasonsApiResponse:
      type: object
      required:
        - success
        - data
        - meta
      properties:
        success:
          type: boolean
          description: Indicates if the request was successful
          example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/SeasonWinner'
          description: Array of season winners
        meta:
          $ref: '#/components/schemas/Meta'

    SeasonRaceWinnersApiResponse:
      type: object
      required:
        - success
        - data
        - meta
      properties:
        success:
          type: boolean
          description: Indicates if the request was successful
          example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/SeasonRaceWinner'
          description: Array of race winners for the season
        meta:
          $ref: '#/components/schemas/SeasonMeta'

    HealthResponse:
      type: object
      required:
        - status
        - timestamp
      properties:
        status:
          type: string
          enum: [ healthy, unhealthy ]
          description: Current health status of the API
          example: "healthy"
        timestamp:
          type: string
          format: date-time
          description: Timestamp when health check was performed
          example: "2023-12-01T10:30:00Z"
        version:
          type: string
          description: API version
          example: "1.0.0"
        uptime:
          type: integer
          description: Server uptime in seconds
          example: 86400
        dependencies:
          type: object
          description: Status of external dependencies
          properties:
            database:
              type: string
              enum: [ healthy, unhealthy ]
              example: "healthy"
            cache:
              type: string
              enum: [ healthy, unhealthy ]
              example: "healthy"

    ErrorResponse:
      type: object
      required:
        - success
        - error
      properties:
        success:
          type: boolean
          description: Always false for error responses
          example: false
        error:
          type: object
          required:
            - message
            - code
          properties:
            message:
              type: string
              description: Human-readable error message
              example: "Season not found"
            code:
              type: string
              description: Error code for programmatic handling
              example: "SEASON_NOT_FOUND"
            details:
              type: object
              description: Additional error details
              additionalProperties: true

tags:
  - name: Seasons
    description: Operations related to F1 seasons and race data
  - name: Health
    description: API health monitoring endpoints
