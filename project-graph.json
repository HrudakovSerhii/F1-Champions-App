{
  "graph": {
    "nodes": {
      "@f1-app/mobile-app-e2e": {
        "name": "@f1-app/mobile-app-e2e",
        "type": "lib",
        "data": {
          "root": "apps/frontend/mobile-app-e2e",
          "projectType": "library",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "^typecheck"
              ],
              "options": {
                "cwd": "apps/frontend/mobile-app-e2e",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "{projectRoot}/package.json",
                "{workspaceRoot}/tsconfig.base.json",
                "{projectRoot}/tsconfig.json",
                "{projectRoot}/**/*.ts",
                "{projectRoot}/**/*.js",
                "{projectRoot}/playwright.config.ts",
                "{projectRoot}/src/**/*.spec.ts",
                "{projectRoot}/src/**/*.spec.js",
                "{projectRoot}/src/**/*.test.ts",
                "{projectRoot}/src/**/*.test.js",
                "{projectRoot}/src/**/*.d.ts",
                "!{projectRoot}/out-tsc",
                "!{projectRoot}/test-output",
                "!{projectRoot}/eslint.config.js",
                "!{projectRoot}/eslint.config.mjs",
                "!{projectRoot}/eslint.config.cjs",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/out-tsc/playwright/**/*.d.ts",
                "{projectRoot}/out-tsc/playwright/**/*.d.ts.map",
                "{projectRoot}/out-tsc/playwright/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/frontend/mobile-app-e2e",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "e2e": {
              "options": {
                "cwd": "apps/frontend/mobile-app-e2e",
                "command": "playwright test"
              },
              "metadata": {
                "technologies": [
                  "playwright"
                ],
                "description": "Runs Playwright Tests",
                "help": {
                  "command": "npx playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "dependsOn": [
                {
                  "projects": [
                    "@f1-app/mobile-app"
                  ],
                  "target": "preview"
                }
              ],
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "@playwright/test"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/test-output/playwright/output",
                "{projectRoot}/test-output/playwright/report"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "e2e-ci--src/example.spec.ts": {
              "options": {
                "cwd": "apps/frontend/mobile-app-e2e",
                "env": {
                  "PLAYWRIGHT_HTML_OUTPUT_DIR": "test-output/playwright/report/src-example-spec-ts",
                  "PLAYWRIGHT_HTML_REPORT": "test-output/playwright/report/src-example-spec-ts"
                },
                "command": "playwright test src/example.spec.ts --output=test-output/playwright/output/src-example-spec-ts"
              },
              "metadata": {
                "technologies": [
                  "playwright"
                ],
                "description": "Runs Playwright Tests in src/example.spec.ts in CI",
                "help": {
                  "command": "npx playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "dependsOn": [
                {
                  "projects": [
                    "@f1-app/mobile-app"
                  ],
                  "target": "preview"
                }
              ],
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "@playwright/test"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/test-output/playwright/output/src-example-spec-ts",
                "{projectRoot}/test-output/playwright/report/src-example-spec-ts"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "@playwright/test"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/test-output/playwright/output",
                "{projectRoot}/test-output/playwright/report"
              ],
              "dependsOn": [
                {
                  "target": "e2e-ci--src/example.spec.ts",
                  "projects": "self",
                  "params": "forward"
                }
              ],
              "metadata": {
                "technologies": [
                  "playwright"
                ],
                "description": "Runs Playwright Tests in CI",
                "nonAtomizedTarget": "e2e",
                "help": {
                  "command": "npx playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "metadata": {
            "targetGroups": {
              "E2E (CI)": [
                "e2e-ci--src/example.spec.ts",
                "e2e-ci"
              ]
            }
          },
          "name": "@f1-app/mobile-app-e2e",
          "implicitDependencies": [],
          "tags": []
        }
      },
      "@f1-app/web-app-e2e": {
        "name": "@f1-app/web-app-e2e",
        "type": "lib",
        "data": {
          "root": "apps/frontend/web-app-e2e",
          "projectType": "library",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "^typecheck"
              ],
              "options": {
                "cwd": "apps/frontend/web-app-e2e",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "{projectRoot}/package.json",
                "{workspaceRoot}/tsconfig.base.json",
                "{projectRoot}/tsconfig.json",
                "{projectRoot}/**/*.ts",
                "{projectRoot}/**/*.js",
                "{projectRoot}/playwright.config.ts",
                "{projectRoot}/src/**/*.spec.ts",
                "{projectRoot}/src/**/*.spec.js",
                "{projectRoot}/src/**/*.test.ts",
                "{projectRoot}/src/**/*.test.js",
                "{projectRoot}/src/**/*.d.ts",
                "!{projectRoot}/out-tsc",
                "!{projectRoot}/test-output",
                "!{projectRoot}/eslint.config.js",
                "!{projectRoot}/eslint.config.mjs",
                "!{projectRoot}/eslint.config.cjs",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/out-tsc/playwright/**/*.d.ts",
                "{projectRoot}/out-tsc/playwright/**/*.d.ts.map",
                "{projectRoot}/out-tsc/playwright/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/frontend/web-app-e2e",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "e2e": {
              "options": {
                "cwd": "apps/frontend/web-app-e2e",
                "command": "playwright test"
              },
              "metadata": {
                "technologies": [
                  "playwright"
                ],
                "description": "Runs Playwright Tests",
                "help": {
                  "command": "npx playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "dependsOn": [
                {
                  "projects": [
                    "web-app"
                  ],
                  "target": "dev"
                }
              ],
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "@playwright/test"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/test-output/playwright/output",
                "{projectRoot}/test-output/playwright/report"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "e2e-ci--src/example.spec.ts": {
              "options": {
                "cwd": "apps/frontend/web-app-e2e",
                "env": {
                  "PLAYWRIGHT_HTML_OUTPUT_DIR": "test-output/playwright/report/src-example-spec-ts",
                  "PLAYWRIGHT_HTML_REPORT": "test-output/playwright/report/src-example-spec-ts"
                },
                "command": "playwright test src/example.spec.ts --output=test-output/playwright/output/src-example-spec-ts"
              },
              "metadata": {
                "technologies": [
                  "playwright"
                ],
                "description": "Runs Playwright Tests in src/example.spec.ts in CI",
                "help": {
                  "command": "npx playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "dependsOn": [
                {
                  "projects": [
                    "web-app"
                  ],
                  "target": "dev"
                }
              ],
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "@playwright/test"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/test-output/playwright/output/src-example-spec-ts",
                "{projectRoot}/test-output/playwright/report/src-example-spec-ts"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "@playwright/test"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/test-output/playwright/output",
                "{projectRoot}/test-output/playwright/report"
              ],
              "dependsOn": [
                {
                  "target": "e2e-ci--src/example.spec.ts",
                  "projects": "self",
                  "params": "forward"
                }
              ],
              "metadata": {
                "technologies": [
                  "playwright"
                ],
                "description": "Runs Playwright Tests in CI",
                "nonAtomizedTarget": "e2e",
                "help": {
                  "command": "npx playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "metadata": {
            "targetGroups": {
              "E2E (CI)": [
                "e2e-ci--src/example.spec.ts",
                "e2e-ci"
              ]
            }
          },
          "name": "@f1-app/web-app-e2e",
          "implicitDependencies": [],
          "tags": []
        }
      },
      "@f1-app/mobile-app": {
        "name": "@f1-app/mobile-app",
        "type": "app",
        "data": {
          "root": "apps/frontend/mobile-app",
          "projectType": "application",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "^typecheck"
              ],
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/dist/**/*.d.ts.map",
                "{projectRoot}/dist/tsconfig.app.tsbuildinfo",
                "{projectRoot}/out-tsc/jest/**/*.d.ts",
                "{projectRoot}/out-tsc/jest/**/*.d.ts.map",
                "{projectRoot}/out-tsc/jest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript",
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "options": {
                "cwd": "apps/frontend/mobile-app",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "continuous": true,
              "options": {
                "cwd": "apps/frontend/mobile-app",
                "command": "react-native start"
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "pod-install": {
              "options": {
                "cwd": "apps/frontend/mobile-app/ios",
                "command": "pod install"
              },
              "dependsOn": [
                "sync-deps"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "run-ios": {
              "continuous": true,
              "options": {
                "cwd": "apps/frontend/mobile-app",
                "command": "react-native run-ios"
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "run-android": {
              "continuous": true,
              "options": {
                "cwd": "apps/frontend/mobile-app",
                "command": "react-native run-android"
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-ios": {
              "options": {
                "cwd": "apps/frontend/mobile-app",
                "command": "react-native build-ios"
              },
              "cache": true,
              "dependsOn": [
                "^build-ios"
              ],
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "react-native"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}/apps/frontend/mobile-app/ios/build/Build/Products"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-android": {
              "options": {
                "cwd": "apps/frontend/mobile-app",
                "command": "react-native build-android"
              },
              "cache": true,
              "dependsOn": [
                "^build-android"
              ],
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "react-native"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}/apps/frontend/mobile-app/android/app/build/outputs"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "bundle": {
              "options": {
                "cwd": "apps/frontend/mobile-app",
                "command": "react-native bundle"
              },
              "dependsOn": [
                "^bundle"
              ],
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "react-native"
                  ]
                }
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "sync-deps": {
              "executor": "@nx/react-native:sync-deps",
              "configurations": {},
              "options": {},
              "parallelism": true
            },
            "update": {
              "options": {
                "cwd": "apps/frontend/mobile-app",
                "command": "react-native upgrade"
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/frontend/mobile-app",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "options": {
                "cwd": "apps/frontend/mobile-app",
                "command": "vite build"
              },
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "vite"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}/apps/dist/apps/mobile-app/web"
              ],
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Run Vite build",
                "help": {
                  "command": "npx vite build --help",
                  "example": {
                    "options": {
                      "sourcemap": true,
                      "manifest": "manifest.json"
                    }
                  }
                }
              },
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve": {
              "continuous": true,
              "options": {
                "cwd": "apps/frontend/mobile-app",
                "command": "vite"
              },
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "npx vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                },
                "deprecated": "Use devTargetName instead. This option will be removed in Nx 22."
              },
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "continuous": true,
              "options": {
                "cwd": "apps/frontend/mobile-app",
                "command": "vite"
              },
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "npx vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                }
              },
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "preview": {
              "continuous": true,
              "dependsOn": [
                "build"
              ],
              "options": {
                "cwd": "apps/frontend/mobile-app",
                "command": "vite preview"
              },
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Locally preview Vite production build",
                "help": {
                  "command": "npx vite preview --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build",
                "spa": true
              },
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "npx nx watch --projects mobile-app --includeDependentProjects -- npx nx build-deps mobile-app"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "metadata": {},
          "name": "@f1-app/mobile-app",
          "implicitDependencies": [],
          "tags": []
        }
      },
      "@f1-app/e2e-testids": {
        "name": "@f1-app/e2e-testids",
        "type": "lib",
        "data": {
          "root": "libs/shared/e2e-testids",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/shared/e2e-testids",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "typecheck": {
              "dependsOn": [
                "^typecheck"
              ],
              "options": {
                "cwd": "libs/shared/e2e-testids",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "{projectRoot}/package.json",
                "{workspaceRoot}/tsconfig.base.json",
                "{projectRoot}/tsconfig.json",
                "{projectRoot}/tsconfig.lib.json",
                "{projectRoot}/src/**/*.ts",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/dist/**/*.d.ts.map",
                "{projectRoot}/dist/tsconfig.lib.tsbuildinfo"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "projectType": "library",
          "name": "@f1-app/e2e-testids",
          "implicitDependencies": [],
          "tags": []
        }
      },
      "web-app": {
        "name": "web-app",
        "type": "app",
        "data": {
          "root": "apps/frontend/web-app",
          "projectType": "application",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "^typecheck"
              ],
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/dist/**/*.d.ts.map",
                "{projectRoot}/dist/tsconfig.app.tsbuildinfo",
                "{projectRoot}/out-tsc/vitest/**/*.d.ts",
                "{projectRoot}/out-tsc/vitest/**/*.d.ts.map",
                "{projectRoot}/out-tsc/vitest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript",
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "options": {
                "cwd": "apps/frontend/web-app",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "options": {
                "passWithNoTests": true,
                "reportsDirectory": "apps/frontend/web-app/test-output/vitest"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            },
            "build": {
              "executor": "@nx/vite:build",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "options": {
                "outputPath": "apps/frontend/web-app/dist"
              },
              "configurations": {
                "development": {
                  "mode": "development"
                },
                "production": {
                  "mode": "production"
                }
              },
              "parallelism": true
            },
            "serve": {
              "continuous": true,
              "options": {
                "cwd": "apps/frontend/web-app",
                "command": "vite"
              },
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "npx vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                },
                "deprecated": "Use devTargetName instead. This option will be removed in Nx 22."
              },
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "@nx/vite:dev-server",
              "defaultConfiguration": "development",
              "options": {
                "buildTarget": "web-app:build"
              },
              "configurations": {
                "development": {
                  "buildTarget": "web-app:build:development",
                  "hmr": true
                }
              },
              "parallelism": true,
              "continuous": true
            },
            "preview": {
              "executor": "@nx/vite:preview-server",
              "defaultConfiguration": "development",
              "options": {
                "buildTarget": "web-app:build"
              },
              "configurations": {},
              "parallelism": true,
              "continuous": true
            },
            "serve-static": {
              "continuous": true,
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build",
                "spa": true
              },
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "npx nx watch --projects web-app --includeDependentProjects -- npx nx build-deps web-app"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@f1-app/web-app",
              "isInPackageManagerWorkspaces": false
            }
          },
          "name": "web-app",
          "tags": [
            "npm:private",
            "type:app",
            "scope:frontend"
          ],
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/frontend/web-app/app",
          "implicitDependencies": []
        }
      },
      "@f1-app/frontend-styles": {
        "name": "@f1-app/frontend-styles",
        "type": "lib",
        "data": {
          "root": "libs/frontend/styles",
          "projectType": "library",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "^typecheck"
              ],
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript",
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "options": {
                "cwd": "libs/frontend/styles",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/vite:build",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "libs/frontend/styles/dist"
              },
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "npx nx watch --projects @f1-app/frontend-styles --includeDependentProjects -- npx nx build-deps @f1-app/frontend-styles"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "options": {
                "passWithNoTests": true,
                "reportsDirectory": "libs/frontend/styles/test-output/vitest"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            }
          },
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@f1-app/frontend-styles",
              "packageExports": {
                "./package.json": "./package.json",
                ".": {
                  "development": "./src/index.ts",
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                },
                "./lib/fonts.css": "./src/lib/fonts.css"
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": false
            }
          },
          "name": "@f1-app/frontend-styles",
          "tags": [
            "npm:private",
            "type:lib",
            "scope:frontend",
            "domain:styles"
          ],
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/frontend/styles/src",
          "implicitDependencies": []
        }
      },
      "@f1-app/api-types": {
        "name": "@f1-app/api-types",
        "type": "lib",
        "data": {
          "root": "libs/shared/types",
          "projectType": "library",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "build",
                "^typecheck"
              ],
              "options": {
                "cwd": "libs/shared/types",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "{projectRoot}/package.json",
                "{workspaceRoot}/tsconfig.base.json",
                "{projectRoot}/tsconfig.json",
                "{projectRoot}/tsconfig.lib.json",
                "{projectRoot}/tsconfig.spec.json",
                "{projectRoot}/vite.config.ts",
                "{projectRoot}/vite.config.mts",
                "{projectRoot}/vitest.config.ts",
                "{projectRoot}/vitest.config.mts",
                "{projectRoot}/src/**/*.test.ts",
                "{projectRoot}/src/**/*.spec.ts",
                "{projectRoot}/src/**/*.test.tsx",
                "{projectRoot}/src/**/*.spec.tsx",
                "{projectRoot}/src/**/*.test.js",
                "{projectRoot}/src/**/*.spec.js",
                "{projectRoot}/src/**/*.test.jsx",
                "{projectRoot}/src/**/*.spec.jsx",
                "{projectRoot}/src/**/*.d.ts",
                "!{projectRoot}/**/*.MD",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/dist/**/*.d.ts.map",
                "{projectRoot}/dist/tsconfig.lib.tsbuildinfo",
                "{projectRoot}/out-tsc/vitest/**/*.d.ts",
                "{projectRoot}/out-tsc/vitest/**/*.d.ts.map",
                "{projectRoot}/out-tsc/vitest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "dependsOn": [
                "^build"
              ],
              "options": {
                "cwd": "libs/shared/types",
                "command": "tsc --build tsconfig.lib.json"
              },
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Builds the project with `tsc`.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "npx nx watch --projects api-types --includeDependentProjects -- npx nx build-deps api-types"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/shared/types",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@f1-app/api-types",
          "implicitDependencies": [],
          "tags": []
        }
      },
      "@f1-app/backend-e2e": {
        "name": "@f1-app/backend-e2e",
        "type": "lib",
        "data": {
          "root": "apps/backend-e2e",
          "projectType": "library",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "^typecheck"
              ],
              "options": {
                "cwd": "apps/backend-e2e",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "{projectRoot}/package.json",
                "{workspaceRoot}/tsconfig.base.json",
                "{projectRoot}/tsconfig.json",
                "{projectRoot}/jest.config.ts",
                "{projectRoot}/src/**/*.ts",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/out-tsc/@f1-app/backend-e2e/**/*.d.ts",
                "{projectRoot}/out-tsc/@f1-app/backend-e2e/**/*.d.ts.map",
                "{projectRoot}/out-tsc/@f1-app/backend-e2e/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/backend-e2e",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "apps/backend-e2e",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "npx jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/test-output/jest/coverage"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            },
            "e2e": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{projectRoot}/test-output/jest/coverage"
              ],
              "options": {
                "jestConfig": "apps/backend-e2e/jest.config.ts",
                "passWithNoTests": true
              },
              "dependsOn": [
                "@f1-app/backend:build",
                "@f1-app/backend:serve"
              ],
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@f1-app/backend-e2e",
          "tags": [
            "npm:private"
          ],
          "implicitDependencies": [
            "@f1-app/backend"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@f1-app/backend-e2e",
              "isInPackageManagerWorkspaces": true
            }
          }
        }
      },
      "@f1-app/backend": {
        "name": "@f1-app/backend",
        "type": "app",
        "data": {
          "root": "apps/backend",
          "projectType": "application",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "^typecheck"
              ],
              "options": {
                "cwd": "apps/backend",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "{projectRoot}/package.json",
                "{workspaceRoot}/tsconfig.base.json",
                "{projectRoot}/tsconfig.json",
                "{projectRoot}/tsconfig.app.json",
                "{projectRoot}/tsconfig.spec.json",
                "{projectRoot}/src/**/*.ts",
                "{projectRoot}/jest.config.js",
                "{projectRoot}/src/**/*.test.ts",
                "{projectRoot}/src/**/*.spec.ts",
                "{projectRoot}/src/**/*.d.ts",
                "!{projectRoot}/out-tsc",
                "!{projectRoot}/dist",
                "!{projectRoot}/jest.config.ts",
                "!{projectRoot}/eslint.config.js",
                "!{projectRoot}/eslint.config.cjs",
                "!{projectRoot}/eslint.config.mjs",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                },
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/dist/**/*.d.ts.map",
                "{projectRoot}/dist/tsconfig.app.tsbuildinfo",
                "{projectRoot}/out-tsc/jest/**/*.d.ts",
                "{projectRoot}/out-tsc/jest/**/*.d.ts.map",
                "{projectRoot}/out-tsc/jest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/backend",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "npx jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/test-output/jest/coverage"
              ],
              "executor": "nx:run-commands",
              "options": {
                "cwd": "apps/backend",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            },
            "build": {
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "webpack-cli"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}/apps/backend/dist"
              ],
              "metadata": {
                "technologies": [
                  "webpack"
                ],
                "description": "Runs Webpack build",
                "help": {
                  "command": "npx webpack-cli build --help",
                  "example": {
                    "options": {
                      "json": "stats.json"
                    },
                    "args": [
                      "--profile"
                    ]
                  }
                }
              },
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "executor": "nx:run-commands",
              "options": {
                "cwd": "apps/backend",
                "args": [
                  "node-env=production"
                ],
                "command": "webpack-cli build"
              },
              "configurations": {
                "development": {
                  "args": [
                    "node-env=development"
                  ]
                }
              },
              "parallelism": true
            },
            "serve": {
              "continuous": true,
              "executor": "@nx/js:node",
              "defaultConfiguration": "development",
              "dependsOn": [
                "build"
              ],
              "options": {
                "buildTarget": "@f1-app/backend:build",
                "runBuildTargetDependencies": false,
                "inspect": false
              },
              "configurations": {
                "development": {
                  "buildTarget": "@f1-app/backend:build:development",
                  "inspect": false
                },
                "production": {
                  "buildTarget": "@f1-app/backend:build:production"
                }
              },
              "parallelism": true
            },
            "preview": {
              "continuous": true,
              "options": {
                "cwd": "apps/backend",
                "args": [
                  "--node-env=production"
                ],
                "command": "webpack-cli serve"
              },
              "metadata": {
                "technologies": [
                  "webpack"
                ],
                "description": "Starts Webpack dev server in production mode",
                "help": {
                  "command": "npx webpack-cli serve --help",
                  "example": {
                    "options": {
                      "args": [
                        "--client-progress",
                        "--history-api-fallback "
                      ]
                    }
                  }
                }
              },
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "dependsOn": [
                "build"
              ],
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build",
                "spa": true
              },
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "npx nx watch --projects @f1-app/backend --includeDependentProjects -- npx nx build-deps @f1-app/backend"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@f1-app/backend",
              "isInPackageManagerWorkspaces": true
            }
          },
          "name": "@f1-app/backend",
          "tags": [
            "npm:private"
          ],
          "implicitDependencies": []
        }
      },
      "e2e": {
        "name": "e2e",
        "type": "e2e",
        "data": {
          "root": "apps/e2e",
          "projectType": "application",
          "targets": {
            "typecheck": {
              "executor": "nx:run-commands",
              "options": {
                "command": "tsc --noEmit",
                "cwd": "apps/e2e"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "apps/e2e/**/*.{js,ts}"
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "e2e": {
              "executor": "@nx/playwright:playwright",
              "outputs": [
                "{workspaceRoot}/apps/e2e/test-results",
                "{workspaceRoot}/apps/e2e/playwright-report"
              ],
              "options": {
                "config": "apps/e2e/playwright.config.ts"
              },
              "configurations": {
                "production": {
                  "config": "apps/e2e/playwright.config.ts"
                }
              },
              "parallelism": true
            },
            "e2e-ci--src/tests/api/api-info.spec.ts": {
              "options": {
                "cwd": "apps/e2e",
                "env": {
                  "PLAYWRIGHT_HTML_OUTPUT_DIR": "playwright-report/src-tests-api-api-info-spec-ts",
                  "PLAYWRIGHT_HTML_REPORT": "playwright-report/src-tests-api-api-info-spec-ts",
                  "PLAYWRIGHT_JSON_OUTPUT_FILE": "playwright-report/src-tests-api-api-info-spec-ts/results.json",
                  "PLAYWRIGHT_JUNIT_OUTPUT_FILE": "playwright-report/src-tests-api-api-info-spec-ts/results.xml",
                  "PLAYWRIGHT_LIST_OUTPUT_DIR": "playwright-report/src-tests-api-api-info-spec-ts"
                },
                "command": "playwright test src/tests/api/api-info.spec.ts --output=test-results/src-tests-api-api-info-spec-ts"
              },
              "metadata": {
                "technologies": [
                  "playwright"
                ],
                "description": "Runs Playwright Tests in src/tests/api/api-info.spec.ts in CI",
                "help": {
                  "command": "npx playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "parallelism": false,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "@playwright/test"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/test-results/src-tests-api-api-info-spec-ts",
                "{projectRoot}/playwright-report/src-tests-api-api-info-spec-ts",
                "{projectRoot}/playwright-report/src-tests-api-api-info-spec-ts/results.json",
                "{projectRoot}/playwright-report/src-tests-api-api-info-spec-ts/results.xml"
              ],
              "executor": "nx:run-commands",
              "configurations": {}
            },
            "e2e-ci--src/tests/api/champions.spec.ts": {
              "options": {
                "cwd": "apps/e2e",
                "env": {
                  "PLAYWRIGHT_HTML_OUTPUT_DIR": "playwright-report/src-tests-api-champions-spec-ts",
                  "PLAYWRIGHT_HTML_REPORT": "playwright-report/src-tests-api-champions-spec-ts",
                  "PLAYWRIGHT_JSON_OUTPUT_FILE": "playwright-report/src-tests-api-champions-spec-ts/results.json",
                  "PLAYWRIGHT_JUNIT_OUTPUT_FILE": "playwright-report/src-tests-api-champions-spec-ts/results.xml",
                  "PLAYWRIGHT_LIST_OUTPUT_DIR": "playwright-report/src-tests-api-champions-spec-ts"
                },
                "command": "playwright test src/tests/api/champions.spec.ts --output=test-results/src-tests-api-champions-spec-ts"
              },
              "metadata": {
                "technologies": [
                  "playwright"
                ],
                "description": "Runs Playwright Tests in src/tests/api/champions.spec.ts in CI",
                "help": {
                  "command": "npx playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "parallelism": false,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "@playwright/test"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/test-results/src-tests-api-champions-spec-ts",
                "{projectRoot}/playwright-report/src-tests-api-champions-spec-ts",
                "{projectRoot}/playwright-report/src-tests-api-champions-spec-ts/results.json",
                "{projectRoot}/playwright-report/src-tests-api-champions-spec-ts/results.xml"
              ],
              "executor": "nx:run-commands",
              "configurations": {}
            },
            "e2e-ci--src/tests/api/race-winners.spec.ts": {
              "options": {
                "cwd": "apps/e2e",
                "env": {
                  "PLAYWRIGHT_HTML_OUTPUT_DIR": "playwright-report/src-tests-api-race-winners-spec-ts",
                  "PLAYWRIGHT_HTML_REPORT": "playwright-report/src-tests-api-race-winners-spec-ts",
                  "PLAYWRIGHT_JSON_OUTPUT_FILE": "playwright-report/src-tests-api-race-winners-spec-ts/results.json",
                  "PLAYWRIGHT_JUNIT_OUTPUT_FILE": "playwright-report/src-tests-api-race-winners-spec-ts/results.xml",
                  "PLAYWRIGHT_LIST_OUTPUT_DIR": "playwright-report/src-tests-api-race-winners-spec-ts"
                },
                "command": "playwright test src/tests/api/race-winners.spec.ts --output=test-results/src-tests-api-race-winners-spec-ts"
              },
              "metadata": {
                "technologies": [
                  "playwright"
                ],
                "description": "Runs Playwright Tests in src/tests/api/race-winners.spec.ts in CI",
                "help": {
                  "command": "npx playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "parallelism": false,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "@playwright/test"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/test-results/src-tests-api-race-winners-spec-ts",
                "{projectRoot}/playwright-report/src-tests-api-race-winners-spec-ts",
                "{projectRoot}/playwright-report/src-tests-api-race-winners-spec-ts/results.json",
                "{projectRoot}/playwright-report/src-tests-api-race-winners-spec-ts/results.xml"
              ],
              "executor": "nx:run-commands",
              "configurations": {}
            },
            "e2e-ci--src/tests/ui/home-page.spec.ts": {
              "options": {
                "cwd": "apps/e2e",
                "env": {
                  "PLAYWRIGHT_HTML_OUTPUT_DIR": "playwright-report/src-tests-ui-home-page-spec-ts",
                  "PLAYWRIGHT_HTML_REPORT": "playwright-report/src-tests-ui-home-page-spec-ts",
                  "PLAYWRIGHT_JSON_OUTPUT_FILE": "playwright-report/src-tests-ui-home-page-spec-ts/results.json",
                  "PLAYWRIGHT_JUNIT_OUTPUT_FILE": "playwright-report/src-tests-ui-home-page-spec-ts/results.xml",
                  "PLAYWRIGHT_LIST_OUTPUT_DIR": "playwright-report/src-tests-ui-home-page-spec-ts"
                },
                "command": "playwright test src/tests/ui/home-page.spec.ts --output=test-results/src-tests-ui-home-page-spec-ts"
              },
              "metadata": {
                "technologies": [
                  "playwright"
                ],
                "description": "Runs Playwright Tests in src/tests/ui/home-page.spec.ts in CI",
                "help": {
                  "command": "npx playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "parallelism": false,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "@playwright/test"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/test-results/src-tests-ui-home-page-spec-ts",
                "{projectRoot}/playwright-report/src-tests-ui-home-page-spec-ts",
                "{projectRoot}/playwright-report/src-tests-ui-home-page-spec-ts/results.json",
                "{projectRoot}/playwright-report/src-tests-ui-home-page-spec-ts/results.xml"
              ],
              "executor": "nx:run-commands",
              "configurations": {}
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "@playwright/test"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/test-results",
                "{projectRoot}/playwright-report",
                "{projectRoot}/playwright-report/results.json",
                "{projectRoot}/playwright-report/results.xml"
              ],
              "dependsOn": [
                {
                  "target": "e2e-ci--src/tests/api/api-info.spec.ts",
                  "projects": "self",
                  "params": "forward"
                },
                {
                  "target": "e2e-ci--src/tests/api/champions.spec.ts",
                  "projects": "self",
                  "params": "forward"
                },
                {
                  "target": "e2e-ci--src/tests/api/race-winners.spec.ts",
                  "projects": "self",
                  "params": "forward"
                },
                {
                  "target": "e2e-ci--src/tests/ui/home-page.spec.ts",
                  "projects": "self",
                  "params": "forward"
                }
              ],
              "metadata": {
                "technologies": [
                  "playwright"
                ],
                "description": "Runs Playwright Tests in CI",
                "nonAtomizedTarget": "e2e",
                "help": {
                  "command": "npx playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "parallelism": false,
              "configurations": {},
              "options": {}
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "playwright test",
                "runCommand": "npm run test"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            },
            "test:headed": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:headed"
              },
              "metadata": {
                "scriptContent": "playwright test --headed",
                "runCommand": "npm run test:headed"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:ui": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:ui"
              },
              "metadata": {
                "scriptContent": "playwright test --ui",
                "runCommand": "npm run test:ui"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:api": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:api"
              },
              "metadata": {
                "scriptContent": "playwright test --project=api",
                "runCommand": "npm run test:api"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:chromium": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:chromium"
              },
              "metadata": {
                "scriptContent": "playwright test --project=chromium",
                "runCommand": "npm run test:chromium"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:firefox": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:firefox"
              },
              "metadata": {
                "scriptContent": "playwright test --project=firefox",
                "runCommand": "npm run test:firefox"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:webkit": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:webkit"
              },
              "metadata": {
                "scriptContent": "playwright test --project=webkit",
                "runCommand": "npm run test:webkit"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:mobile": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:mobile"
              },
              "metadata": {
                "scriptContent": "playwright test --project='Mobile Chrome' --project='Mobile Safari'",
                "runCommand": "npm run test:mobile"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:debug": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:debug"
              },
              "metadata": {
                "scriptContent": "playwright test --debug",
                "runCommand": "npm run test:debug"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:report": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:report"
              },
              "metadata": {
                "scriptContent": "playwright show-report",
                "runCommand": "npm run test:report"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:codegen": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:codegen"
              },
              "metadata": {
                "scriptContent": "playwright codegen",
                "runCommand": "npm run test:codegen"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:trace": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:trace"
              },
              "metadata": {
                "scriptContent": "playwright show-trace",
                "runCommand": "npm run test:trace"
              },
              "configurations": {},
              "parallelism": true
            },
            "e2e-ui": {
              "executor": "@nx/playwright:playwright",
              "options": {
                "config": "apps/e2e/playwright.config.ts",
                "ui": true
              },
              "configurations": {},
              "parallelism": true
            },
            "e2e-headed": {
              "executor": "@nx/playwright:playwright",
              "options": {
                "config": "apps/e2e/playwright.config.ts",
                "headed": true
              },
              "configurations": {},
              "parallelism": true
            },
            "e2e-debug": {
              "executor": "@nx/playwright:playwright",
              "options": {
                "config": "apps/e2e/playwright.config.ts",
                "debug": true
              },
              "configurations": {},
              "parallelism": true
            },
            "e2e-api": {
              "executor": "@nx/playwright:playwright",
              "options": {
                "config": "apps/e2e/playwright.config.ts",
                "project": "api"
              },
              "configurations": {},
              "parallelism": true
            },
            "e2e-chrome": {
              "executor": "@nx/playwright:playwright",
              "options": {
                "config": "apps/e2e/playwright.config.ts",
                "project": "chromium"
              },
              "configurations": {},
              "parallelism": true
            },
            "e2e-firefox": {
              "executor": "@nx/playwright:playwright",
              "options": {
                "config": "apps/e2e/playwright.config.ts",
                "project": "firefox"
              },
              "configurations": {},
              "parallelism": true
            },
            "e2e-safari": {
              "executor": "@nx/playwright:playwright",
              "options": {
                "config": "apps/e2e/playwright.config.ts",
                "project": "webkit"
              },
              "configurations": {},
              "parallelism": true
            },
            "e2e-mobile": {
              "executor": "@nx/playwright:playwright",
              "options": {
                "config": "apps/e2e/playwright.config.ts",
                "project": "Mobile Chrome"
              },
              "configurations": {},
              "parallelism": true
            },
            "install-browsers": {
              "executor": "nx:run-commands",
              "options": {
                "command": "npx playwright install",
                "cwd": "apps/e2e"
              },
              "configurations": {},
              "parallelism": true
            },
            "show-report": {
              "executor": "nx:run-commands",
              "options": {
                "command": "npx playwright show-report",
                "cwd": "apps/e2e"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "metadata": {
            "targetGroups": {
              "E2E (CI)": [
                "e2e-ci--src/tests/api/api-info.spec.ts",
                "e2e-ci--src/tests/api/champions.spec.ts",
                "e2e-ci--src/tests/api/race-winners.spec.ts",
                "e2e-ci--src/tests/ui/home-page.spec.ts",
                "e2e-ci"
              ],
              "NPM Scripts": [
                "test",
                "test:headed",
                "test:ui",
                "test:api",
                "test:chromium",
                "test:firefox",
                "test:webkit",
                "test:mobile",
                "test:debug",
                "test:report",
                "test:codegen",
                "test:trace"
              ]
            },
            "description": "F1 Champions App E2E Test Suite",
            "js": {
              "packageName": "@f1-app/e2e",
              "isInPackageManagerWorkspaces": true
            }
          },
          "name": "e2e",
          "tags": [
            "npm:private",
            "type:e2e",
            "scope:testing"
          ],
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/e2e/src",
          "implicitDependencies": [
            "web-app",
            "@f1-app/backend"
          ]
        }
      }
    },
    "dependencies": {
      "@f1-app/mobile-app-e2e": [],
      "@f1-app/web-app-e2e": [],
      "@f1-app/mobile-app": [],
      "@f1-app/e2e-testids": [],
      "web-app": [
        {
          "source": "web-app",
          "target": "@f1-app/api-types",
          "type": "static"
        },
        {
          "source": "web-app",
          "target": "@f1-app/e2e-testids",
          "type": "static"
        },
        {
          "source": "web-app",
          "target": "@f1-app/frontend-styles",
          "type": "static"
        }
      ],
      "@f1-app/frontend-styles": [],
      "@f1-app/api-types": [],
      "@f1-app/backend-e2e": [
        {
          "source": "@f1-app/backend-e2e",
          "target": "@f1-app/backend",
          "type": "implicit"
        }
      ],
      "@f1-app/backend": [
        {
          "source": "@f1-app/backend",
          "target": "@f1-app/api-types",
          "type": "static"
        }
      ],
      "e2e": [
        {
          "source": "e2e",
          "target": "web-app",
          "type": "implicit"
        },
        {
          "source": "e2e",
          "target": "@f1-app/backend",
          "type": "implicit"
        },
        {
          "source": "e2e",
          "target": "@f1-app/e2e-testids",
          "type": "static"
        }
      ]
    }
  }
}